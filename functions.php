<?php include 'array.php';

// –°–ª—É—á–∞–π–Ω–æ –≤—ã–±–∏—Ä–∞–µ–º –ø–µ—Ä—Å–æ–Ω—É (–§–ò–û) –∏–∑ –º–∞—Å—Å–∏–≤–∞
$randomPerson = $example_persons_array[random_int(0, count($example_persons_array) - 1)]['fullname']; // string
// echo var_dump($randomPerson);


// –†–∞–∑–±–∏–µ–Ω–∏–µ –§–ò–û
function getPartsFromFullname($randomPerson) {
  global $personNameParts;
  $personNameParts =
  [
    'surname' => explode(' ', $randomPerson)[0],
    'name' => explode(' ', $randomPerson)[1],
    'patronymic' => explode(' ', $randomPerson)[2]
  ];
  return $personNameParts;
}

// –û–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ –§–ò–û –∏–∑ —á–∞—Å—Ç–µ–π (–∫–æ–Ω–∫–∞—Ç–µ–Ω–∞—Ü–∏—è)
function getFullnameFromParts($surname, $name, $patronymic) {
  global $personFullName;
  $personFullName = $surname . ' ' . $name . ' ' . $patronymic;
  return $personFullName;
}

// –°–æ–∫—Ä–∞—â–µ–Ω–∏–µ –§–ò–û (mb_substr - –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —á–∞—Å—Ç—å —Å—Ç—Ä–æ–∫–∏)
function getShortName($randomPerson) {
  global $personShortName;
  $personShortName = getPartsFromFullname($randomPerson)['name'] .' '. mb_substr(getPartsFromFullname($randomPerson)['surname'], 0, 1) . '.';
  return $personShortName;
}

// –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ–ª–∞ –ø–æ –§–ò–û (<=> - –∫–æ—Å–º–∏—á–µ—Å–∫–∏–π –∫–æ—Ä–∞–±–ª—å <-1, 0, 1>)
function getGenderFromName($randomPerson) {
  $genderCount = 0;
  $surname = getPartsFromFullname($randomPerson)['surname'];
  $name = getPartsFromFullname($randomPerson)['name'];
  $patronymic = getPartsFromFullname($randomPerson)['patronymic'];
  if (mb_substr($surname, -2) === '–≤–∞') {
    $genderCount--;
  }
  if (mb_substr($name, -1) === '–∞') {
    $genderCount--;
  }
  if (mb_substr($patronymic, -3) === '–≤–Ω–∞') {
    $genderCount--;
  }
  if (mb_substr($surname, -1) === '–≤') {
    $genderCount++;
  }
  if (mb_substr($name, -1) === '–π' || mb_substr($name, -1) === '–Ω') {
    $genderCount++;
  }
  if (mb_substr($patronymic, -2) === '–∏—á') {
    $genderCount++;
  }
  global $genderFromName;
  $genderFromName = $genderCount <=> 0;
  return $genderFromName;
}

// –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –≥–µ–Ω–¥–µ—Ä–Ω–æ–≥–æ —Å–æ—Å—Ç–∞–≤–∞ –∞—É–¥–∏—Ç–æ—Ä–∏–∏
function getGenderDescription($example_persons_array) {
  foreach ($example_persons_array as $persons) {
    $gender[] = getGenderFromName($persons['fullname']);
  }
  function male($gender) {
    return $gender === 1;
  }
  function female($gender) {
    return $gender === -1;
  }
  $personsCount = count($example_persons_array);
  $menCount = count(array_filter($gender, 'male'));
  $womenCount = count(array_filter($gender, 'female'));
  $men = round($menCount / $personsCount * 100, 1);
  $women = round($womenCount / $personsCount * 100, 1);
  $undefined = 100 - ($men + $women);
  global $genderDescription;
  $genderDescription = <<<MAYBESEX
    –ì–µ–Ω–¥–µ—Ä–Ω—ã–π —Å–æ—Å—Ç–∞–≤ –∞—É–¥–∏—Ç–æ—Ä–∏–∏:
    <br>
    ---------------------------
    <br>
    –ú—É–∂—á–∏–Ω—ã - $men%
    <br>
    –ñ–µ–Ω—â–∏–Ω—ã - $women%
    <br>
    –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å - $undefined%
    MAYBESEX;
  return $genderDescription;
}

// "–ò–¥–µ–∞–ª—å–Ω—ã–π" –ø–æ–¥–±–æ—Ä –ø–∞—Ä—ã
function getPerfectPartner ($surname, $name, $patronymic, $example_persons_array) {
  $surname = mb_convert_case($surname, MB_CASE_TITLE_SIMPLE);
  $name = mb_convert_case($name, MB_CASE_TITLE_SIMPLE);
  $patronymic = mb_convert_case($patronymic, MB_CASE_TITLE_SIMPLE);
  $personFullName = $surname . ' ' . $name . ' ' . $patronymic;
  $genderPerson = getGenderFromName($personFullName);
  $personShortName = getShortName($personFullName);
  global $perfectPartner;
  if ($genderPerson != 0) {
    do {
      $partnerFullName = mb_convert_case($example_persons_array[random_int(0, count($example_persons_array) - 1)]['fullname'], MB_CASE_TITLE_SIMPLE);
      $genderPartner = getGenderFromName($partnerFullName);
    }
    while ($genderPerson === $genderPartner || $genderPartner === 0);
    $partnerShortName = getShortName($partnerFullName);
    $idealCompatibility = round(random_int(5000, 10000) / 100, 2);
    $perfectPartner = <<<MAYBEYES
      $personShortName + $partnerShortName =
      <br>
      üíó ¬´–ò–¥–µ–∞–ª—å–Ω–æ¬ª –Ω–∞ $idealCompatibility% üíó
      MAYBEYES;
  } else {
    $perfectPartner = <<<MAYBENO
    $personShortName <=> üëΩ
    <br>
    –ù–µ —Å–º–æ–≥–ª–∏ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø–æ–ª!
    MAYBENO;
  }
  return $perfectPartner;
}
